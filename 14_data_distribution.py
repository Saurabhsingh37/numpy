'''
A RANDOM DISTRIBUTION IS A SET OF RANDOM NUMBER THAT A CERTAIN PROBABILITY DENSITY FUNCTION 

PROBABILITY DENSITY FUNCTION : A FUNCTION THAT DESCRIBES A CONTINUES PROBABILITY I.E PROBABILITY OF ALL VALUES IN AN ARRAY 

THE PROBABILITY IS SET BY NUMBER BETWEEN 0 OR 1 WHERE 0 MEANS THAT THE VALUE WILL NEVER OCCUR 1 MEANS THAT THE VALUE WILL ALWAYS OCCUR :
'''

# GENERATE A 1D ARRAY ACCORDING  TO 100 VALUES WHERE EACH VALUE HAS TO BE 3,5,7,9:
from numpy import random 
x = random .choice([2,4,6,8],p=[0.1,0.3,0.6,0.0], size=(100)) # all probability sum ia 1 :
print ("set probability in fix element : ",x)

# SAME EXAMPLE ABOVE AS ABOVE BUT RETURN A 2D ARRAY WITH 3 ROWS EACH CONTAINING 5 VALUES :

x = random .choice([4,7,9,2],p=[0.4,0.2, 0.2,0.2],size=(3,5))
print ("print 2-d array :",x)

#  RANDOM PERMUTATIONS  ELEMENT :
# A PERMUTATION REFER TO AN ARRANGEMENT OF ELEMENT E.G. [3,2,1] IA A PERMUTATION OF [1,2,3] AND VICE-VERSA.
# THE NUMPY RANDOM MODULE PROVIDES TWO METHOD FOR THIS : shuffLE() AND PERMUTATION().

# SHUFFLE MEANS CHANGING ARRANGEMENT OF ELEMENT IN PLACE I.E IN THE ARRAY :

from numpy import random 
import numpy as np 

arr = np.array ([1,2,3,4,5])
random . shuffle(arr)
print ("using shuffle function : ",arr)
# SHUFFLE METHOD MAKES CHANGE TO THE ORIGINAL ARRAY .

# GENERATE A RANDOM PERMUTATION OF ELEMENT OF FOLLOWING ARRAY : 
from numpy import random 
import numpy as np 

arr = np.array ([1,2,3,4,5])
newarr = random.permutation (arr)
print (newarr)
# THE PERMUTATION METHOD RETURN A RE-ARRANGED ARRAY (AND LEAVES THE ORIGINAL ARRAY UN -CHANGED ).